{"version":3,"sources":["index.js"],"names":["Square","props","className","onClick","value","Board","i","this","squares","renderSquare","React","Component","Game","state","history","Array","fill","xIsNext","stepNumber","slice","length","calculateWinner","setState","concat","winnerMatrix","a","b","c","map","step","move","desc","key","jumpTo","status","winner","handleClick","renderHistoryList","ReactDOM","render","document","getElementById"],"mappings":"iPAIA,SAASA,EAAOC,GACZ,OACE,4BAAQC,UAAU,SAASC,QAAW,WAAKF,EAAME,YAC9CF,EAAMG,O,IAKTC,E,2KACSC,GAAI,IAAD,OACd,OAAO,kBAACN,EAAD,CAAQI,MAAOG,KAAKN,MAAMO,QAAQF,GAAIH,QAAS,WAAK,EAAKF,MAAME,QAAQG,Q,+BAGhF,OACI,6BACE,yBAAKJ,UAAU,aACZK,KAAKE,aAAa,GAClBF,KAAKE,aAAa,GAClBF,KAAKE,aAAa,IAErB,yBAAKP,UAAU,aACZK,KAAKE,aAAa,GAClBF,KAAKE,aAAa,GAClBF,KAAKE,aAAa,IAErB,yBAAKP,UAAU,aACZK,KAAKE,aAAa,GAClBF,KAAKE,aAAa,GAClBF,KAAKE,aAAa,S,GApBTC,IAAMC,WA2BpBC,E,kDACJ,WAAYX,GAAQ,IAAD,8BACjB,cAAMA,IACDY,MAAQ,CACXC,QAAS,CACP,CACEN,QAAUO,MAAM,GAAGC,KAAK,QAG5BC,SAAS,EACTC,WAAW,GATI,E,wDAaPZ,GACX,IAAMQ,EAAUP,KAAKM,MAAMC,QAAQK,MAAM,EAAGZ,KAAKM,MAAMK,WAAa,GAE7DV,EADUM,EAAQA,EAAQM,OAAS,GACjBZ,QAAQW,QAC5BZ,KAAKc,gBAAgBb,IAAYA,EAAQF,KAG7CE,EAAQF,GAAKC,KAAKM,MAAMI,QAAU,IAAM,IACxCV,KAAKe,SAAS,CACZR,QAASA,EAAQS,OAAO,CAAC,CACvBf,QAASA,KAEXU,WAAYJ,EAAQM,OACpBH,SAAUV,KAAKM,MAAMI,a,sCAITT,GAaf,IAXC,IAAMgB,EAAe,CAAC,CAAC,EAAE,EAAE,GACL,CAAC,EAAE,EAAE,GACL,CAAC,EAAE,EAAE,GACL,CAAC,EAAE,EAAE,GACL,CAAC,EAAE,EAAE,GACL,CAAC,EAAE,EAAE,GACL,CAAC,EAAE,EAAE,GACL,CAAC,EAAE,EAAE,IAIpBlB,EAAI,EAAGA,EAAIkB,EAAaJ,OAASd,IAAK,CAAC,IAAD,cAC7BkB,EAAalB,GADgB,GACtCmB,EADsC,KACpCC,EADoC,KAClCC,EADkC,KAG7C,GAAGnB,EAAQiB,IAAMjB,EAAQiB,KAAKjB,EAAQkB,IAAMlB,EAAQiB,KAAKjB,EAAQmB,GAC/D,OAAOnB,EAAQiB,GAGlB,OAAO,O,0CAIa,IAAD,OAUlB,OATclB,KAAKM,MAAMC,QAAQc,KAAI,SAACC,EAAMC,GAC5C,IAAMC,EAAOD,EACT,eAAiBA,EACjB,mBACF,OACE,wBAAIE,IAAKF,GACP,4BAAQ3B,QAAS,kBAAM,EAAK8B,OAAOH,KAAQC,S,6BAO5CD,GACLvB,KAAKe,SAAS,CACZJ,WAAYY,EACZb,QAAUa,EAAO,IAAO,M,+BAKlB,IAEJI,EAFG,OACDC,EAAS5B,KAAKc,gBAAgBd,KAAKM,MAAMC,QAAQP,KAAKM,MAAMC,QAAQM,OAAO,GAAGZ,SAUpF,OANG0B,EADU,OAAVC,EACS,cAAgBA,EAEhB,gBAAkB5B,KAAKM,MAAMI,QAAS,IAAM,KAKtD,yBAAKf,UAAU,QACb,yBAAKA,UAAU,cACb,kBAACG,EAAD,CAAOG,QAAWD,KAAKM,MAAMC,QAAQP,KAAKM,MAAMK,YAAYV,QAASL,QAAU,SAACG,GAAK,EAAK8B,YAAY9B,OAExG,yBAAKJ,UAAU,aACb,6BAAMgC,GAEN,6BAAM3B,KAAK8B,2B,GAhGF3B,IAAMC,WA0GzB2B,IAASC,OACP,kBAAC3B,EAAD,MACA4B,SAASC,eAAe,W","file":"static/js/main.030f8375.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nfunction Square(props) {\n    return (\n      <button className=\"square\" onClick = {()=>{props.onClick()}}>\n        {props.value}\n      </button>\n    );\n}\n\nclass Board extends React.Component {\n  renderSquare(i) {\n    return <Square value={this.props.squares[i]} onClick={()=>{this.props.onClick(i)}}/>\n  };\n  render () {\n  return (\n      <div>\n        <div className=\"board-row\">\n          {this.renderSquare(0)}\n          {this.renderSquare(1)}\n          {this.renderSquare(2)}\n        </div>\n        <div className=\"board-row\">\n          {this.renderSquare(3)}\n          {this.renderSquare(4)}\n          {this.renderSquare(5)}\n        </div>\n        <div className=\"board-row\">\n          {this.renderSquare(6)}\n          {this.renderSquare(7)}\n          {this.renderSquare(8)}\n        </div>\n      </div>\n    );\n  }\n}\n\nclass Game extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      history: [\n        {\n          squares : Array(9).fill(null)\n        }\n      ],\n      xIsNext: true,\n      stepNumber:0\n    }\n  }\n\n  handleClick(i) {\n   const history = this.state.history.slice(0, this.state.stepNumber + 1);\n    const current = history[history.length - 1];\n    const squares = current.squares.slice();\n    if (this.calculateWinner(squares) || squares[i]) {\n      return;\n    }\n    squares[i] = this.state.xIsNext ? 'X' : 'O';\n    this.setState({\n      history: history.concat([{\n        squares: squares\n      }]),\n      stepNumber: history.length,\n      xIsNext: !this.state.xIsNext,\n    });\n  }\n\n  calculateWinner(squares) {\n\n    const winnerMatrix = [[0,1,2],\n                          [6,7,8],\n                          [0,3,6],\n                          [3,4,5],\n                          [1,4,7],\n                          [2,5,8],\n                          [0,4,8],\n                          [2,4,6]\n                         ];\n\n\n   for(let i = 0; i < winnerMatrix.length;  i++ ){\n    const [a,b,c] = winnerMatrix[i];\n    //console.log(\"a\", a, \"b\", b, \"c\", c);\n    if(squares[a] && squares[a]===squares[b] && squares[a]===squares[c]) {\n      return squares[a];\n    }\n   }\n   return null;\n\n  }\n\n  renderHistoryList() {\n    const moves = this.state.history.map((step, move) => {\n    const desc = move ?\n        'Go to move #' + move :\n        'Go to game start';\n      return (\n        <li key={move}>\n          <button onClick={() => this.jumpTo(move)}>{desc}</button>\n        </li>\n    )});\n    return moves;  \n  }\n\n\n  jumpTo(move) {\n    this.setState({\n      stepNumber: move,\n      xIsNext: (move % 2) === 0,\n    });\n\n  }\n\n  render() {\n    const winner = this.calculateWinner(this.state.history[this.state.history.length-1].squares);\n    let status;\n    \n    if(winner !==null) {\n       status = 'Winner is :' + winner;\n    }else{\n       status = 'Next player:' + (this.state.xIsNext? 'X' : 'O');\n    }\n\n\n    return (\n      <div className=\"game\">\n        <div className=\"game-board\">\n          <Board squares = {this.state.history[this.state.stepNumber].squares} onClick ={(i)=>{this.handleClick(i)}}/>\n        </div>\n        <div className=\"game-info\">\n          <div>{status}</div>\n          \n          <div>{this.renderHistoryList()}</div>\n          \n        </div>\n      </div>\n    );\n  }\n}\n\n// ========================================\n\nReactDOM.render(\n  <Game/>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}